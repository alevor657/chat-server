9e32c78571c1192b19c9b6e3ce8eba7a
/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_12gtasdsxq = function () {var path = '/app/src/index.js',hash = 'f1ba1f6836cfe984721fe1861dacb655f48e972b',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/app/src/index.js', statementMap: { '0': { start: { line: 12, column: 0 }, end: { line: 30, column: 1 } }, '1': { start: { line: 13, column: 4 }, end: { line: 20, column: 7 } }, '2': { start: { line: 14, column: 8 }, end: { line: 19, column: 9 } }, '3': { start: { line: 15, column: 12 }, end: { line: 15, column: 87 } }, '4': { start: { line: 16, column: 12 }, end: { line: 16, column: 28 } }, '5': { start: { line: 18, column: 12 }, end: { line: 18, column: 72 } }, '6': { start: { line: 22, column: 4 }, end: { line: 29, column: 7 } }, '7': { start: { line: 23, column: 8 }, end: { line: 28, column: 9 } }, '8': { start: { line: 24, column: 12 }, end: { line: 24, column: 88 } }, '9': { start: { line: 25, column: 12 }, end: { line: 25, column: 28 } }, '10': { start: { line: 27, column: 12 }, end: { line: 27, column: 73 } }, '11': { start: { line: 33, column: 0 }, end: { line: 33, column: 34 } }, '12': { start: { line: 34, column: 11 }, end: { line: 34, column: 30 } }, '13': { start: { line: 36, column: 0 }, end: { line: 36, column: 65 } }, '14': { start: { line: 38, column: 12 }, end: { line: 38, column: 21 } }, '15': { start: { line: 41, column: 13 }, end: { line: 41, column: 44 } }, '16': { start: { line: 44, column: 0 }, end: { line: 44, column: 23 } }, '17': { start: { line: 45, column: 0 }, end: { line: 45, column: 27 } }, '18': { start: { line: 48, column: 0 }, end: { line: 48, column: 16 } }, '19': { start: { line: 51, column: 0 }, end: { line: 51, column: 23 } }, '20': { start: { line: 53, column: 13 }, end: { line: 53, column: 40 } }, '21': { start: { line: 56, column: 0 }, end: { line: 59, column: 2 } }, '22': { start: { line: 58, column: 10 }, end: { line: 58, column: 87 } }, '23': { start: { line: 61, column: 0 }, end: { line: 61, column: 17 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 13, column: 76 }, end: { line: 13, column: 77 } }, loc: { start: { line: 13, column: 91 }, end: { line: 20, column: 5 } }, line: 13 }, '1': { name: '(anonymous_1)', decl: { start: { line: 22, column: 52 }, end: { line: 22, column: 53 } }, loc: { start: { line: 22, column: 67 }, end: { line: 29, column: 5 } }, line: 22 }, '2': { name: '(anonymous_2)', decl: { start: { line: 58, column: 4 }, end: { line: 58, column: 5 } }, loc: { start: { line: 58, column: 10 }, end: { line: 58, column: 87 } }, line: 58 } }, branchMap: { '0': { loc: { start: { line: 12, column: 0 }, end: { line: 30, column: 1 } }, type: 'if', locations: [{ start: { line: 12, column: 0 }, end: { line: 30, column: 1 } }, { start: { line: 12, column: 0 }, end: { line: 30, column: 1 } }], line: 12 }, '1': { loc: { start: { line: 14, column: 8 }, end: { line: 19, column: 9 } }, type: 'if', locations: [{ start: { line: 14, column: 8 }, end: { line: 19, column: 9 } }, { start: { line: 14, column: 8 }, end: { line: 19, column: 9 } }], line: 14 }, '2': { loc: { start: { line: 23, column: 8 }, end: { line: 28, column: 9 } }, type: 'if', locations: [{ start: { line: 23, column: 8 }, end: { line: 28, column: 9 } }, { start: { line: 23, column: 8 }, end: { line: 28, column: 9 } }], line: 23 }, '3': { loc: { start: { line: 41, column: 13 }, end: { line: 41, column: 44 } }, type: 'binary-expr', locations: [{ start: { line: 41, column: 13 }, end: { line: 41, column: 36 } }, { start: { line: 41, column: 40 }, end: { line: 41, column: 44 } }], line: 41 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0 }, f: { '0': 0, '1': 0, '2': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}(); /* istanbul ignore next */require('babel-polyfill');
var /* istanbul ignore next */_express = require('express'); /* istanbul ignore next */var _express2 = _interopRequireDefault(_express);
var /* istanbul ignore next */_user = require('./api/routes/user'); /* istanbul ignore next */var _user2 = _interopRequireDefault(_user);
var /* istanbul ignore next */_morgan = require('morgan'); /* istanbul ignore next */var _morgan2 = _interopRequireDefault(_morgan);
var /* istanbul ignore next */_bodyParser = require('body-parser'); /* istanbul ignore next */var _bodyParser2 = _interopRequireDefault(_bodyParser);
var /* istanbul ignore next */_mongoose = require('mongoose'); /* istanbul ignore next */var _mongoose2 = _interopRequireDefault(_mongoose);
var /* istanbul ignore next */_cors = require('cors'); /* istanbul ignore next */var _cors2 = _interopRequireDefault(_cors);
var /* istanbul ignore next */_chalk = require('chalk'); /* istanbul ignore next */var _chalk2 = _interopRequireDefault(_chalk);

var /* istanbul ignore next */_socketioChatServer = require('socketio-chat-server'); /* istanbul ignore next */var _socketioChatServer2 = _interopRequireDefault(_socketioChatServer);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}cov_12gtasdsxq.s[0]++;

if (process.env.MONGO_TEST_DB) {/* istanbul ignore next */cov_12gtasdsxq.b[0][0]++;cov_12gtasdsxq.s[1]++;
    /* istanbul ignore next */_mongoose2.default.connect('mongodb://tester:tester@80.78.218.152:27017/chatAPI', function (err) {/* istanbul ignore next */cov_12gtasdsxq.f[0]++;cov_12gtasdsxq.s[2]++;
        if (err) {/* istanbul ignore next */cov_12gtasdsxq.b[1][0]++;cov_12gtasdsxq.s[3]++;
            console.log( /* istanbul ignore next */_chalk2.default.yellow.bgRed.bold('Could not connect to test database')); /* istanbul ignore next */cov_12gtasdsxq.s[4]++;
            process.exit(2);
        } else {/* istanbul ignore next */cov_12gtasdsxq.b[1][1]++;cov_12gtasdsxq.s[5]++;
            console.log( /* istanbul ignore next */_chalk2.default.green.bold('Connected to test database'));
        }
    });
} else {/* istanbul ignore next */cov_12gtasdsxq.b[0][1]++;cov_12gtasdsxq.s[6]++;
    /* istanbul ignore next */_mongoose2.default.connect('mongodb://localhost/chatAPI', function (err) {/* istanbul ignore next */cov_12gtasdsxq.f[1]++;cov_12gtasdsxq.s[7]++;
        if (err) {/* istanbul ignore next */cov_12gtasdsxq.b[2][0]++;cov_12gtasdsxq.s[8]++;
            console.log( /* istanbul ignore next */_chalk2.default.yellow.bgRed.bold('Could not connect to local database')); /* istanbul ignore next */cov_12gtasdsxq.s[9]++;
            process.exit(2);
        } else {/* istanbul ignore next */cov_12gtasdsxq.b[2][1]++;cov_12gtasdsxq.s[10]++;
            console.log( /* istanbul ignore next */_chalk2.default.green.bold('Connected to local database'));
        }
    });
} /* istanbul ignore next */cov_12gtasdsxq.s[11]++;


/* istanbul ignore next */_mongoose2.default.Promise = global.Promise;
const db = /* istanbul ignore next */(cov_12gtasdsxq.s[12]++, /* istanbul ignore next */_mongoose2.default.connection); /* istanbul ignore next */cov_12gtasdsxq.s[13]++;

db.on('error', console.error.bind(console, 'connection error:'));

const app = /* istanbul ignore next */(cov_12gtasdsxq.s[14]++, /* istanbul ignore next */(0, _express2.default)());


const port = /* istanbul ignore next */(cov_12gtasdsxq.s[15]++, /* istanbul ignore next */(cov_12gtasdsxq.b[3][0]++, process.env.DBWEBB_PORT) || /* istanbul ignore next */(cov_12gtasdsxq.b[3][1]++, 1338));

// Middleware
/* istanbul ignore next */cov_12gtasdsxq.s[16]++;app.use( /* istanbul ignore next */(0, _morgan2.default)('dev')); /* istanbul ignore next */cov_12gtasdsxq.s[17]++;
app.use( /* istanbul ignore next */_bodyParser2.default.json());

// Fix cors
/* istanbul ignore next */cov_12gtasdsxq.s[18]++;app.use( /* istanbul ignore next */(0, _cors2.default)());

// Routes
/* istanbul ignore next */cov_12gtasdsxq.s[19]++;app.use('/user', /* istanbul ignore next */_user2.default);

let server = /* istanbul ignore next */(cov_12gtasdsxq.s[20]++, require('http').Server(app));

// Start API
/* istanbul ignore next */cov_12gtasdsxq.s[21]++;server.listen(
port,
() => {/* istanbul ignore next */cov_12gtasdsxq.f[2]++;cov_12gtasdsxq.s[22]++;return console.log( /* istanbul ignore next */_chalk2.default.green.bold(`App is listening on http://localhost:${port}`));}); /* istanbul ignore next */cov_12gtasdsxq.s[23]++;


new /* istanbul ignore next */_socketioChatServer2.default(server); /* istanbul ignore next */exports.default =

server;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJNT05HT19URVNUX0RCIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJ5ZWxsb3ciLCJiZ1JlZCIsImJvbGQiLCJleGl0IiwiZ3JlZW4iLCJQcm9taXNlIiwiZ2xvYmFsIiwiZGIiLCJjb25uZWN0aW9uIiwib24iLCJlcnJvciIsImJpbmQiLCJhcHAiLCJwb3J0IiwiREJXRUJCX1BPUlQiLCJ1c2UiLCJqc29uIiwic2VydmVyIiwicmVxdWlyZSIsIlNlcnZlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6InFvSUFBQTtBQUNBLDREO0FBQ0EsbUU7QUFDQSwwRDtBQUNBLG1FO0FBQ0EsOEQ7QUFDQSxzRDtBQUNBLHdEOztBQUVBLG9GOztBQUVBLElBQUlBLFFBQVFDLEdBQVIsQ0FBWUMsYUFBaEIsRUFBK0I7QUFDM0IsaURBQVNDLE9BQVQsQ0FBaUIscURBQWpCLEVBQXdFLFVBQVVDLEdBQVYsRUFBZTtBQUNuRixZQUFJQSxHQUFKLEVBQVM7QUFDTEMsb0JBQVFDLEdBQVIsQ0FBWSwyQ0FBTUMsTUFBTixDQUFhQyxLQUFiLENBQW1CQyxJQUFuQixDQUF3QixvQ0FBeEIsQ0FBWixFQURLO0FBRUxULG9CQUFRVSxJQUFSLENBQWEsQ0FBYjtBQUNILFNBSEQsTUFHTztBQUNITCxvQkFBUUMsR0FBUixDQUFZLDJDQUFNSyxLQUFOLENBQVlGLElBQVosQ0FBaUIsNEJBQWpCLENBQVo7QUFDSDtBQUNKLEtBUEQ7QUFRSCxDQVRELE1BU087QUFDSCxpREFBU04sT0FBVCxDQUFpQiw2QkFBakIsRUFBZ0QsVUFBVUMsR0FBVixFQUFlO0FBQzNELFlBQUlBLEdBQUosRUFBUztBQUNMQyxvQkFBUUMsR0FBUixDQUFZLDJDQUFNQyxNQUFOLENBQWFDLEtBQWIsQ0FBbUJDLElBQW5CLENBQXdCLHFDQUF4QixDQUFaLEVBREs7QUFFTFQsb0JBQVFVLElBQVIsQ0FBYSxDQUFiO0FBQ0gsU0FIRCxNQUdPO0FBQ0hMLG9CQUFRQyxHQUFSLENBQVksMkNBQU1LLEtBQU4sQ0FBWUYsSUFBWixDQUFpQiw2QkFBakIsQ0FBWjtBQUNIO0FBQ0osS0FQRDtBQVFILEM7OztBQUdELDZDQUFTRyxPQUFULEdBQW1CQyxPQUFPRCxPQUExQjtBQUNBLE1BQU1FLHdEQUFLLDZDQUFTQyxVQUFkLENBQU4sQzs7QUFFQUQsR0FBR0UsRUFBSCxDQUFNLE9BQU4sRUFBZVgsUUFBUVksS0FBUixDQUFjQyxJQUFkLENBQW1CYixPQUFuQixFQUE0QixtQkFBNUIsQ0FBZjs7QUFFQSxNQUFNYyx5REFBTSxrREFBTixDQUFOOzs7QUFHQSxNQUFNQywwREFBTyw2REFBUW5CLEdBQVIsQ0FBWW9CLFdBQVosMERBQTJCLElBQTNCLENBQVAsQ0FBTjs7QUFFQTtpREFDQUYsSUFBSUcsR0FBSixDQUFRLGlEQUFPLEtBQVAsQ0FBUixFO0FBQ0FILElBQUlHLEdBQUosQ0FBUSxnREFBV0MsSUFBWCxFQUFSOztBQUVBO2lEQUNBSixJQUFJRyxHQUFKLENBQVEsZ0RBQVI7O0FBRUE7aURBQ0FILElBQUlHLEdBQUosQ0FBUSxPQUFSOztBQUVBLElBQUlFLDREQUFTQyxRQUFRLE1BQVIsRUFBZ0JDLE1BQWhCLENBQXVCUCxHQUF2QixDQUFULENBQUo7O0FBRUE7aURBQ0FLLE9BQU9HLE1BQVA7QUFDSVAsSUFESjtBQUVJLE1BQU0sdUZBQVFkLEdBQVIsQ0FBWSwyQ0FBTUssS0FBTixDQUFZRixJQUFaLENBQWtCLHdDQUF1Q1csSUFBSyxFQUE5RCxDQUFaLEVBQTZFLENBRnZGLEU7OztBQUtBLDJEQUFTSSxNQUFULEU7O0FBRWVBLE0iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2JhYmVsLXBvbHlmaWxsJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHVzZXIgZnJvbSAnLi9hcGkvcm91dGVzL3VzZXInO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJztcblxuaW1wb3J0IENoYXQgZnJvbSAnc29ja2V0aW8tY2hhdC1zZXJ2ZXInO1xuXG5pZiAocHJvY2Vzcy5lbnYuTU9OR09fVEVTVF9EQikge1xuICAgIG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly90ZXN0ZXI6dGVzdGVyQDgwLjc4LjIxOC4xNTI6MjcwMTcvY2hhdEFQSScsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coY2hhbGsueWVsbG93LmJnUmVkLmJvbGQoJ0NvdWxkIG5vdCBjb25uZWN0IHRvIHRlc3QgZGF0YWJhc2UnKSk7XG4gICAgICAgICAgICBwcm9jZXNzLmV4aXQoMik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbi5ib2xkKCdDb25uZWN0ZWQgdG8gdGVzdCBkYXRhYmFzZScpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSBlbHNlIHtcbiAgICBtb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L2NoYXRBUEknLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLnllbGxvdy5iZ1JlZC5ib2xkKCdDb3VsZCBub3QgY29ubmVjdCB0byBsb2NhbCBkYXRhYmFzZScpKTtcbiAgICAgICAgICAgIHByb2Nlc3MuZXhpdCgyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLmdyZWVuLmJvbGQoJ0Nvbm5lY3RlZCB0byBsb2NhbCBkYXRhYmFzZScpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5cbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcblxuZGIub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdjb25uZWN0aW9uIGVycm9yOicpKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5EQldFQkJfUE9SVCB8fCAxMzM4O1xuXG4vLyBNaWRkbGV3YXJlXG5hcHAudXNlKG1vcmdhbignZGV2JykpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbi8vIEZpeCBjb3JzXG5hcHAudXNlKGNvcnMoKSk7XG5cbi8vIFJvdXRlc1xuYXBwLnVzZSgnL3VzZXInLCB1c2VyKTtcblxubGV0IHNlcnZlciA9IHJlcXVpcmUoJ2h0dHAnKS5TZXJ2ZXIoYXBwKTtcblxuLy8gU3RhcnQgQVBJXG5zZXJ2ZXIubGlzdGVuKFxuICAgIHBvcnQsXG4gICAgKCkgPT4gY29uc29sZS5sb2coY2hhbGsuZ3JlZW4uYm9sZChgQXBwIGlzIGxpc3RlbmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKSlcbik7XG5cbm5ldyBDaGF0KHNlcnZlcik7XG5cbmV4cG9ydCBkZWZhdWx0IHNlcnZlcjtcbiJdfQ==