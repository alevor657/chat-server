d3ca3f63a9e1376e97fd8af527bfd562
/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.deleteUsers = exports.profile = exports.signIn = exports.signUp = undefined;var cov_2j00ci9m9k = function () {var path = '/app/src/api/controllers/user.js',hash = '14943b52473acb593e71f4ee55b1338d36b20a41',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/app/src/api/controllers/user.js', statementMap: { '0': { start: { line: 3, column: 22 }, end: { line: 20, column: 1 } }, '1': { start: { line: 4, column: 17 }, end: { line: 4, column: 27 } }, '2': { start: { line: 5, column: 19 }, end: { line: 5, column: 33 } }, '3': { start: { line: 6, column: 22 }, end: { line: 6, column: 48 } }, '4': { start: { line: 8, column: 4 }, end: { line: 10, column: 5 } }, '5': { start: { line: 9, column: 8 }, end: { line: 9, column: 85 } }, '6': { start: { line: 12, column: 18 }, end: { line: 12, column: 49 } }, '7': { start: { line: 13, column: 32 }, end: { line: 13, column: 38 } }, '8': { start: { line: 15, column: 4 }, end: { line: 19, column: 7 } }, '9': { start: { line: 22, column: 22 }, end: { line: 31, column: 1 } }, '10': { start: { line: 23, column: 18 }, end: { line: 23, column: 48 } }, '11': { start: { line: 24, column: 32 }, end: { line: 24, column: 40 } }, '12': { start: { line: 26, column: 4 }, end: { line: 30, column: 7 } }, '13': { start: { line: 33, column: 23 }, end: { line: 35, column: 1 } }, '14': { start: { line: 34, column: 4 }, end: { line: 34, column: 24 } }, '15': { start: { line: 37, column: 27 }, end: { line: 40, column: 1 } }, '16': { start: { line: 38, column: 4 }, end: { line: 38, column: 25 } }, '17': { start: { line: 39, column: 4 }, end: { line: 39, column: 34 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 3, column: 22 }, end: { line: 3, column: 23 } }, loc: { start: { line: 3, column: 42 }, end: { line: 20, column: 1 } }, line: 3 }, '1': { name: '(anonymous_1)', decl: { start: { line: 22, column: 22 }, end: { line: 22, column: 23 } }, loc: { start: { line: 22, column: 42 }, end: { line: 31, column: 1 } }, line: 22 }, '2': { name: '(anonymous_2)', decl: { start: { line: 33, column: 23 }, end: { line: 33, column: 24 } }, loc: { start: { line: 33, column: 43 }, end: { line: 35, column: 1 } }, line: 33 }, '3': { name: '(anonymous_3)', decl: { start: { line: 37, column: 27 }, end: { line: 37, column: 28 } }, loc: { start: { line: 37, column: 47 }, end: { line: 40, column: 1 } }, line: 37 } }, branchMap: { '0': { loc: { start: { line: 8, column: 4 }, end: { line: 10, column: 5 } }, type: 'if', locations: [{ start: { line: 8, column: 4 }, end: { line: 10, column: 5 } }, { start: { line: 8, column: 4 }, end: { line: 10, column: 5 } }], line: 8 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0 }, b: { '0': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var /* istanbul ignore next */_User = require('../models/User'); /* istanbul ignore next */var _User2 = _interopRequireDefault(_User);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new Promise(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return Promise.resolve(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};}cov_2j00ci9m9k.s[0]++;

const signUp = /* istanbul ignore next */exports.signUp = (() => {var _ref = _asyncToGenerator(function* (req, res) {/* istanbul ignore next */cov_2j00ci9m9k.f[0]++;
        const user = /* istanbul ignore next */(cov_2j00ci9m9k.s[1]++, new /* istanbul ignore next */_User2.default());
        const fields = /* istanbul ignore next */(cov_2j00ci9m9k.s[2]++, req.value.body);
        const foundUser = /* istanbul ignore next */(cov_2j00ci9m9k.s[3]++, yield user.getUser(fields)); /* istanbul ignore next */cov_2j00ci9m9k.s[4]++;

        if (foundUser) {/* istanbul ignore next */cov_2j00ci9m9k.b[0][0]++;cov_2j00ci9m9k.s[5]++;
            return res.status(403).json({ 'error': "Email or username is alredy in use" });
        } else /* istanbul ignore next */{cov_2j00ci9m9k.b[0][1]++;}

        const token = /* istanbul ignore next */(cov_2j00ci9m9k.s[6]++, yield user.registerUser(fields));
        const { username, email } = /* istanbul ignore next */(cov_2j00ci9m9k.s[7]++, fields); /* istanbul ignore next */cov_2j00ci9m9k.s[8]++;

        res.status(201).json({
            token,
            username,
            email });

    });return function signUp(_x, _x2) {return _ref.apply(this, arguments);};})(); /* istanbul ignore next */cov_2j00ci9m9k.s[9]++;

const signIn = /* istanbul ignore next */exports.signIn = (() => {var _ref2 = _asyncToGenerator(function* (req, res) {/* istanbul ignore next */cov_2j00ci9m9k.f[1]++;
        const token = /* istanbul ignore next */(cov_2j00ci9m9k.s[10]++, yield (/* istanbul ignore next */_User2.default.signToken(req.user)));
        const { email, username } = /* istanbul ignore next */(cov_2j00ci9m9k.s[11]++, req.user); /* istanbul ignore next */cov_2j00ci9m9k.s[12]++;

        res.status(202).json({
            token,
            email,
            username });

    });return function signIn(_x3, _x4) {return _ref2.apply(this, arguments);};})(); /* istanbul ignore next */cov_2j00ci9m9k.s[13]++;

const profile = /* istanbul ignore next */exports.profile = (() => {var _ref3 = _asyncToGenerator(function* (req, res) {/* istanbul ignore next */cov_2j00ci9m9k.f[2]++;cov_2j00ci9m9k.s[14]++;
        res.json('profile');
    });return function profile(_x5, _x6) {return _ref3.apply(this, arguments);};})(); /* istanbul ignore next */cov_2j00ci9m9k.s[15]++;

const deleteUsers = /* istanbul ignore next */exports.deleteUsers = (() => {var _ref4 = _asyncToGenerator(function* (req, res) {/* istanbul ignore next */cov_2j00ci9m9k.f[3]++;cov_2j00ci9m9k.s[16]++;
        yield (/* istanbul ignore next */_User2.default.dropAll()); /* istanbul ignore next */cov_2j00ci9m9k.s[17]++;
        res.json('dropped all users');
    });return function deleteUsers(_x7, _x8) {return _ref4.apply(this, arguments);};})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsic2lnblVwIiwicmVxIiwicmVzIiwidXNlciIsImZpZWxkcyIsInZhbHVlIiwiYm9keSIsImZvdW5kVXNlciIsImdldFVzZXIiLCJzdGF0dXMiLCJqc29uIiwidG9rZW4iLCJyZWdpc3RlclVzZXIiLCJ1c2VybmFtZSIsImVtYWlsIiwic2lnbkluIiwic2lnblRva2VuIiwicHJvZmlsZSIsImRlbGV0ZVVzZXJzIiwiZHJvcEFsbCJdLCJtYXBwaW5ncyI6ImtxR0FBQSxnRTs7QUFFTyxNQUFNQSx5RkFBUyxXQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBb0I7QUFDdEMsY0FBTUMseURBQU8sOENBQVAsQ0FBTjtBQUNBLGNBQU1DLDJEQUFTSCxJQUFJSSxLQUFKLENBQVVDLElBQW5CLENBQU47QUFDQSxjQUFNQyw4REFBWSxNQUFNSixLQUFLSyxPQUFMLENBQWFKLE1BQWIsQ0FBbEIsQ0FBTixDQUhzQzs7QUFLdEMsWUFBSUcsU0FBSixFQUFlO0FBQ1gsbUJBQU9MLElBQUlPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixFQUFDLFNBQVMsb0NBQVYsRUFBckIsQ0FBUDtBQUNILFNBRkQ7O0FBSUEsY0FBTUMsMERBQVEsTUFBTVIsS0FBS1MsWUFBTCxDQUFrQlIsTUFBbEIsQ0FBZCxDQUFOO0FBQ0EsY0FBTSxFQUFFUyxRQUFGLEVBQVlDLEtBQVosdURBQXNCVixNQUF0QixDQUFOLENBVnNDOztBQVl0Q0YsWUFBSU8sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxpQkFEaUI7QUFFakJFLG9CQUZpQjtBQUdqQkMsaUJBSGlCLEVBQXJCOztBQUtILEtBakJZLDRFQUFOLEM7O0FBbUJBLE1BQU1DLDBGQUFTLFdBQU9kLEdBQVAsRUFBWUMsR0FBWixFQUFvQjtBQUN0QyxjQUFNUywyREFBUSxNQUFNLDBDQUFLSyxTQUFMLENBQWVmLElBQUlFLElBQW5CLENBQU4sQ0FBUixDQUFOO0FBQ0EsY0FBTSxFQUFFVyxLQUFGLEVBQVNELFFBQVQsd0RBQXNCWixJQUFJRSxJQUExQixDQUFOLENBRnNDOztBQUl0Q0QsWUFBSU8sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxpQkFEaUI7QUFFakJHLGlCQUZpQjtBQUdqQkQsb0JBSGlCLEVBQXJCOztBQUtILEtBVFksOEVBQU4sQzs7QUFXQSxNQUFNSSw0RkFBVSxXQUFPaEIsR0FBUCxFQUFZQyxHQUFaLEVBQW9CO0FBQ3ZDQSxZQUFJUSxJQUFKLENBQVMsU0FBVDtBQUNILEtBRlksK0VBQU4sQzs7QUFJQSxNQUFNUSxvR0FBYyxXQUFPakIsR0FBUCxFQUFZQyxHQUFaLEVBQW9CO0FBQzNDLGNBQU0sMENBQUtpQixPQUFMLEVBQU4sRUFEMkM7QUFFM0NqQixZQUFJUSxJQUFKLENBQVMsbUJBQVQ7QUFDSCxLQUhZLG1GQUFOIiwiZmlsZSI6InVzZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvVXNlcic7XG5cbmV4cG9ydCBjb25zdCBzaWduVXAgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoKTtcbiAgICBjb25zdCBmaWVsZHMgPSByZXEudmFsdWUuYm9keTtcbiAgICBjb25zdCBmb3VuZFVzZXIgPSBhd2FpdCB1c2VyLmdldFVzZXIoZmllbGRzKTtcblxuICAgIGlmIChmb3VuZFVzZXIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHsnZXJyb3InOiBcIkVtYWlsIG9yIHVzZXJuYW1lIGlzIGFscmVkeSBpbiB1c2VcIn0pO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdXNlci5yZWdpc3RlclVzZXIoZmllbGRzKTtcbiAgICBjb25zdCB7IHVzZXJuYW1lLCBlbWFpbCB9ID0gZmllbGRzO1xuXG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICB0b2tlbixcbiAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgIGVtYWlsXG4gICAgfSk7XG59O1xuXG5leHBvcnQgY29uc3Qgc2lnbkluID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCBVc2VyLnNpZ25Ub2tlbihyZXEudXNlcik7XG4gICAgY29uc3QgeyBlbWFpbCwgdXNlcm5hbWUgfSA9IHJlcS51c2VyO1xuXG4gICAgcmVzLnN0YXR1cygyMDIpLmpzb24oe1xuICAgICAgICB0b2tlbixcbiAgICAgICAgZW1haWwsXG4gICAgICAgIHVzZXJuYW1lXG4gICAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgcHJvZmlsZSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKCdwcm9maWxlJyk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlVXNlcnMgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBhd2FpdCBVc2VyLmRyb3BBbGwoKTtcbiAgICByZXMuanNvbignZHJvcHBlZCBhbGwgdXNlcnMnKTtcbn07XG4iXX0=